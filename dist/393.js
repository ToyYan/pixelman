"use strict";exports.id=393,exports.ids=[393],exports.modules={6393:(e,t,s)=>{s.r(t);var r=s(5673),i=s.n(r),n=s(1081),o=s(7718),a=s(5473),d=s(6269);const c=(0,d.loadConfig)(),l=Object.assign({},d.defaultConfig,c),{renderName:h,renderServerHost:p,maxInstance:m,renderServerPort:u,renderServerURL:k,nvidiaSmiPath:v}=l;setInterval((function(){const e=(0,o.spawn)(v,["--query-gpu=index,name,utilization.gpu,utilization.memory,fan.speed,memory.total,memory.used,memory.free","--format=csv,noheader,nounits"]);e.stdout.on("data",(e=>{const t=e.toString().split("\n").filter((e=>e)).map((e=>{const[t,s,r,i,n,o,a,d]=e.split(",").map((e=>e.trim()));return{index:parseInt(t),name:s,gpu:parseInt(r),memory:parseInt(i),fan:parseInt(n),totalMomory:parseInt(o),memoryUsed:parseInt(a),memoryFree:parseInt(d)}}));I({type:"gpuInfo",data:t}),a.Z.info(`nvidia-smi stdout: ${t}`)})),e.on("close",(e=>{0!==e&&a.Z.error(`nvidia-smi child process closed with code ${e}`)})),e.on("exit",(e=>{0!==e&&a.Z.error(`nvidia-smi child process exited with code ${e}`)})),e.on("error",(e=>{a.Z.error(`nvidia-smi child process error ${e}`)}))}),1e3);const y=new Map;class f extends(i()){id;status="started";proc;constructor(e){super(),this.id=e;const{cwd:t,exec:s}=l.task,r=s.replace("{taskId}",e);this.proc=(0,o.spawn)(r,{cwd:t,detached:!1,shell:!0,stdio:"ignore"}),this.proc.on("close",(e=>{this.emit("close",e)})),this.proc.on("error",(e=>{this.emit("err",e)}))}async kill(){if(this.proc.unref(),this.proc.pid){this.proc.unref();try{let e=!1;return"win32"===process.platform?((0,o.execSync)(`taskkill /pid ${this.proc.pid} /T /F`),e=!0):e=process.kill(-this.proc.pid),a.Z.info("kill task",this.id,this.proc.pid,e),e}catch(e){a.Z.error("kill task error",this.id,this.proc.pid,e)}}return!1}}const w=new class{url;intarval;ws=null;eventListener=new Map;intervalTimer=null;retryCount=0;constructor(e,t=1e3){this.url=e,this.intarval=t,this.connect()}connect(){this.ws=new n.XY(this.url),this.ws.on("error",(e=>{this.retry()})),this.ws.on("close",(e=>{this.retry()})),this.ws.on("open",(()=>{this.retryCount=0,g()}));for(const[e,t]of this.eventListener)for(const s of t)this.ws.addEventListener(e,s)}retry(){this.intervalTimer&&clearTimeout(this.intervalTimer),this.intervalTimer=setTimeout((()=>{a.Z.info(`retry connect to ${this.url} ${this.retryCount}`),this.connect(),this.retryCount++}),this.intarval)}on(e,t){this.addEventListener(e,t)}send(e){this.ws&&this.ws.readyState===n.XY.OPEN&&this.ws.send(e)}addEventListener(e,t){this.eventListener.has(e)||this.eventListener.set(e,new Set),this.eventListener.get(e)?.add(t),this.ws&&this.ws.readyState<=n.XY.OPEN&&this.ws.addEventListener(e,t)}removeEventListener(e,t){this.eventListener.has(e)&&(this.eventListener.get(e)?.delete(t),this.ws&&this.ws.readyState<=n.XY.OPEN&&this.ws.removeEventListener(e,t))}close(){this.ws&&this.ws.readyState===n.XY.OPEN&&this.ws.close(),this.intervalTimer&&clearTimeout(this.intervalTimer)}}(k||`ws://${p}:${u}`);function I(e){const t=JSON.stringify(e);a.Z.info(`send message to server ${e.type} ${t}`),w.send(t)}function g(){I({type:"renderConfig",data:{renderName:h,gpuCount:1,maxInstance:m,plotform:process.platform}})}w.addEventListener("open",(()=>{a.Z.info("server connected"),g()})),w.addEventListener("message",(e=>async function(e){let t;try{t=JSON.parse(e)}catch(t){return void console.error(`cannot parse render message: ${e}\nError: ${t}`)}const s=y.size;switch(t.type){case"ping":I({type:"pong",time:t.time});break;case"createTask":if(s>=m)return void I({type:"taskRejected",taskId:t.taskId,maxInstance:m,taskCount:s});const e=new f(t.taskId),r=t.taskId;e.on("close",(e=>{a.Z.info(`task ${r} closed with code ${e}`),I({type:"taskDie",taskId:r,taskCount:y.size}),y.delete(r)})),e.on("error",(e=>{a.Z.error(`task ${r} error ${e}`),I({type:"taskDie",taskId:r,taskCount:y.size}),y.delete(r)})),y.set(t.taskId,e),I({type:"taskCreated",taskId:t.taskId,taskCount:y.size});break;case"killTask":y.has(t.taskId)?(await(y.get(t.taskId)?.kill()),y.delete(t.taskId),I({type:"taskKilled",taskId:t.taskId,taskCount:y.size})):I({type:"taskNotFound",taskId:t.taskId,taskCount:y.size})}}(e.data.toString()))),w.addEventListener("close",(()=>{a.Z.info("server closed"),y.forEach((e=>e.kill()))})),w.addEventListener("error",(e=>{a.Z.error(`server error ${e.message}`),y.forEach((e=>e.kill()))})),process.on("exit",(()=>{y.forEach((e=>e.kill())),a.Z.info("process exit")}))}};